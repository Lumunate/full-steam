generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  FAMILY
  NANNY
}

enum Gender {
  MALE
  FEMALE
  OTHER
}


enum ServiceType {
  SERVICE_TYPE_1
  SERVICE_TYPE_2
  SERVICE_TYPE_3
  SERVICE_TYPE_4
  SERVICE_TYPE_5
}


model User {
  id        String   @id @default(cuid())
  role      Role
  password  String
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName   String
  lastName    String
  birthDate   DateTime
  gender      Gender   @default(OTHER)
  phoneNumber String
  username    String   @unique
  address     String
  city        String
  postalCode  String

  children Children[]
  services UserService[]

  isDeleted Boolean   @default(false)
  isBlocked Boolean   @default(false)
  deletedAt DateTime?
  blockedAt DateTime?

  @@map("users")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}


model Children {
  id         String   @id @default(cuid())
  firstName  String
  lastName   String
  age        Int
  specialNotes String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String

  @@map("children")
}

model Service {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  price       Float
  type        ServiceType
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  users       UserService[]

  @@map("services")
}

model UserService {
  id        String   @id @default(cuid())
  userId    String
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  service   Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@map("user_services")
}